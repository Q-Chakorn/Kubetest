https://medium.com/sirisoft/kubernetes-zero-2-hero-ep-2-%E0%B8%97%E0%B8%B3%E0%B8%84%E0%B8%A7%E0%B8%B2%E0%B8%A1%E0%B8%A3%E0%B8%B9%E0%B9%89%E0%B8%88%E0%B8%B1%E0%B8%81-resource-type-%E0%B9%81%E0%B8%A5%E0%B8%B0-%E0%B8%81%E0%B8%B2%E0%B8%A3-deploy-application-%E0%B8%9A%E0%B8%99-kubernetes-73b6e03e68bb

สร้าง Pod ชื่อ “first-pod” ด้วย Image “nginx”
- kubectl run first-pod --image=nginx --port=80 -n test
curl http://10.1.1.125 -m 3 # ip ของ first-pod
-------

ต้องการให้ภายนอกเข้ามาใช้งาน Pod ของเราได้เราต้องใช้งาน Resource Type ที่ชื่อว่า “Service” เข้ามาจัดการในเรื่องนี้
kubectl expose po first-pod --type=NodePort --target-port=80 --port=80
# curl ไปที่ localhost port ตามที่เราได้ get service ออกมาดู
curl http://localhost:...
--------

เมื่อเราต้องการสร้าง Pod มากกว่าหนึ่ง Pod โดยที่ Pod นั้นเป็น Application เดียวกัน
ReplicaSet จะคอยตรวจสอบอยู่เสมอว่า Pod ที่เรา Deploy นั้นมีจำนวนเท่ากับที่เรากำหนดไว้ตอนแรกด้วยหรือไม่ 
ถ้า Pod จำนวนไม่เท่ากับที่เรากำหนด ReplicaSet จะทำให้ Pod มีจำนวนเท่ากับที่กำหนดไว้ในตอนแรก
--> replicas.yaml

ซึ่งเราก็สมารถเพิ่มลดจำนวนของ Pod ได้ด้วย command
- kubectl scale rs first-rs --replicas=...
--------

สร้าง Deployment ชื่อ first-deployment ด้วย image “nginx” รันที่ port 80 และมีจำนวน 2 Pods
- kubectl create deployment first-deployment --image=nginx --port=80 --replicas=2
--------

ทดลองแก้ไขเวอร์ชันสำหรับ Application ที่ Deployment ด้วย Command
- kubectl set image deployment first-deployment nginx=nginx:1.19
--------
##################
--------
https://medium.com/sirisoft/kubernetes-zero-2-hero-ep-3-%E0%B8%AA%E0%B8%A3%E0%B9%89%E0%B8%B2%E0%B8%87-service-ingress-%E0%B9%81%E0%B8%A5%E0%B8%B0%E0%B8%81%E0%B8%B2%E0%B8%A3%E0%B8%97%E0%B8%B3-horizontal-pod-autoscaler-af2b51606873

ClusterIP เป็น Service ที่เป็นตัวกลางการสื่อสารของ Pod ภายใน Cluster สื่อสารกันภายใน User ภายนอกไม่สามารถเข้ามาใช้งาน Pod ผ่าน ClusterIP ได้
- first-service.yaml

NodePort เป็น Service ที่สามารถทำให้ User ภายนอก เข้ามาใช้งาน Pod ภายใน Cluster ได้ 
โดยที่ User สามารถเข้าถึงได้โดยการใช้ IP ของ Node ภายใน Cluster และ NodePort ที่ถูกกำหนดไว้ที่ตั้งแต่หมายเลข 30000–32767
- first-service-NodePort.yaml
- kubectl expose pod first-pod -n test --name=first-pod-svc-np --type=NodePort --target-port=80 --port=80
--------

LoadBalancer เป็น Service ที่สามารถทำให้ภายนอกเข้ามาใช้งาน Pod ภายใน Cluster ได้ แต่จะต้องใช้ External Load Balancer ของ Cloud Provider
เพื่อให้ Service ประเภท LoadBalancer นั้นทำงานได้ ไม่เช่นนั้น ในส่วนของ EXTERNAL-IP เมื่อเราเรียก Service ออกมาดูจะขึ้น “pending” อยู่ตลอดเวลา
- first-service-loadbalancer.yaml
- kubectl expose pod first-pod -n test --name=first-pod-svc-lb --type=LoadBalancer --target-port=80 --port=80



--help--
kubectl get pods -A
kubectl get pods -n <namspace>
kubectl get pods -o wide
kubectl get svc
kubectl get rs,pods
kubectl get deploy,rs,pods -n test
kubectl get pods,service,rs,deploy -o wide -n test